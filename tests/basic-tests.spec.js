/**
 * Prueba simple para verificar que la aplicaciÃ³n funciona
 */

import { test, expect } from '@playwright/test';
import AuthHelper from './utils/authHelper.js';

test.describe('Pruebas BÃ¡sicas de la AplicaciÃ³n', () => {
  
  test('Verificar que la aplicaciÃ³n carga correctamente', async ({ page }) => {
    const authHelper = new AuthHelper(page);
    
    console.log('ðŸ§ª Iniciando prueba bÃ¡sica...');
    
    // Navegar a la pÃ¡gina principal
    await authHelper.navigateTo('/');
    await authHelper.waitForAppReady();
    
    // Verificar que no estemos en login
    const isOnLogin = await authHelper.isOnLoginPage();
    expect(isOnLogin).toBe(false);
    
    // Verificar que la pÃ¡gina tenga contenido
    const hasContent = await page.locator('body').isVisible();
    expect(hasContent).toBe(true);
    
    console.log('âœ… Prueba bÃ¡sica completada');
  });

  test('Verificar navegaciÃ³n a crear venta', async ({ page }) => {
    const authHelper = new AuthHelper(page);
    
    console.log('ðŸ§ª Probando navegaciÃ³n a crear venta...');
    
    // Navegar a crear venta
    await authHelper.navigateTo('/crear-venta');
    await authHelper.waitForAppReady();
    
    // Verificar que estemos en la pÃ¡gina correcta
    const url = page.url();
    expect(url).toContain('crear-venta');
    
    // Verificar que haya elementos del formulario
    const hasForm = await page.locator('form, .sales-form').isVisible();
    expect(hasForm).toBe(true);
    
    console.log('âœ… NavegaciÃ³n a crear venta exitosa');
  });

  test('Verificar elementos bÃ¡sicos del formulario', async ({ page }) => {
    const authHelper = new AuthHelper(page);
    
    console.log('ðŸ§ª Verificando elementos del formulario...');
    
    await authHelper.navigateTo('/crear-venta');
    await authHelper.waitForAppReady();
    
    // Verificar que existan elementos bÃ¡sicos
    const searchInput = await page.locator('input[placeholder*="nombre, cÃ©dula"]').isVisible();
    const productSearch = await page.locator('input[placeholder*="Buscar producto"]').isVisible();
    const submitButton = await page.locator('button[type="submit"]').isVisible();
    
    expect(searchInput).toBe(true);
    expect(productSearch).toBe(true);
    expect(submitButton).toBe(true);
    
    console.log('âœ… Elementos del formulario verificados');
  });
});
