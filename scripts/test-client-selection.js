#!/usr/bin/env node

/**
 * Script para probar la selecci√≥n de clientes
 */

import { createClient } from '@supabase/supabase-js'
import dotenv from 'dotenv'

// Cargar variables de entorno
dotenv.config()

// Configuraci√≥n de Supabase
const supabaseUrl = process.env.VITE_SUPABASE_URL
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Error: Faltan credenciales de Supabase en el archivo .env')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseKey)

/**
 * Simular la b√∫squeda y selecci√≥n de clientes
 */
async function simularSeleccionCliente() {
  try {
    console.log('üß™ Simulando b√∫squeda y selecci√≥n de clientes...')
    
    // Obtener todos los clientes
    const { data: clientes, error } = await supabase
      .from('clientes')
      .select('*')
    
    if (error) {
      console.error('‚ùå Error al obtener clientes:', error.message)
      return false
    }
    
    console.log(`üìä Total de clientes: ${clientes.length}`)
    
    // Simular b√∫squeda por "luis"
    const query = 'luis'
    console.log(`üîç Buscando por: "${query}"`)
    
    const resultados = clientes.filter(cliente => {
      if (!cliente) return false
      
      const nombre = (cliente.nombre || '').toLowerCase()
      const apellido = (cliente.apellido || '').toLowerCase()
      const cedula = (cliente.cedula_rif || '').toLowerCase()
      const telefono = (cliente.telefono || '').toLowerCase()
      const queryLower = query.toLowerCase()
      
      const matchNombre = nombre.includes(queryLower)
      const matchApellido = apellido.includes(queryLower)
      const matchCedula = cedula.includes(queryLower)
      const matchTelefono = telefono.includes(queryLower)
      
      return matchNombre || matchApellido || matchCedula || matchTelefono
    })
    
    console.log(`üìã Resultados encontrados: ${resultados.length}`)
    
    if (resultados.length > 0) {
      const clienteSeleccionado = resultados[0]
      console.log('üë§ Cliente seleccionado:')
      console.log('   ID:', clienteSeleccionado.id)
      console.log('   Nombre:', clienteSeleccionado.nombre)
      console.log('   Apellido:', clienteSeleccionado.apellido)
      console.log('   C√©dula:', clienteSeleccionado.cedula_rif)
      console.log('   Tel√©fono:', clienteSeleccionado.telefono)
      console.log('   Email:', clienteSeleccionado.email)
      console.log('   Direcci√≥n:', clienteSeleccionado.direccion)
      
      // Simular asignaci√≥n a venta
      const venta = {
        cliente_id: clienteSeleccionado.id,
        cliente_cedula: clienteSeleccionado.cedula_rif,
        cliente_nombre: clienteSeleccionado.nombre,
        cliente_apellido: clienteSeleccionado.apellido,
        cliente_telefono: clienteSeleccionado.telefono,
        cliente_email: clienteSeleccionado.email,
        cliente_direccion: clienteSeleccionado.direccion
      }
      
      console.log('')
      console.log('‚úÖ Datos asignados a venta:')
      console.log('   cliente_id:', venta.cliente_id)
      console.log('   cliente_cedula:', venta.cliente_cedula)
      console.log('   cliente_nombre:', venta.cliente_nombre)
      console.log('   cliente_apellido:', venta.cliente_apellido)
      
      // Verificar validaci√≥n
      const cedulaValida = venta.cliente_cedula && venta.cliente_cedula.trim()
      const nombreValido = venta.cliente_nombre && venta.cliente_nombre.trim()
      
      console.log('')
      console.log('üîç Validaci√≥n:')
      console.log('   C√©dula v√°lida:', cedulaValida)
      console.log('   Nombre v√°lido:', nombreValido)
      
      if (cedulaValida && nombreValido) {
        console.log('‚úÖ Validaci√≥n exitosa - Cliente puede ser usado')
        return true
      } else {
        console.log('‚ùå Validaci√≥n fall√≥ - Cliente no puede ser usado')
        return false
      }
    } else {
      console.log('‚ö†Ô∏è No se encontraron clientes')
      return false
    }
    
  } catch (error) {
    console.error('‚ùå Error inesperado:', error.message)
    return false
  }
}

/**
 * Funci√≥n principal
 */
async function main() {
  console.log('üß™ Prueba de selecci√≥n de clientes')
  console.log(`‚è∞ ${new Date().toLocaleString('es-VE')}`)
  console.log('')
  
  try {
    const exito = await simularSeleccionCliente()
    
    if (exito) {
      console.log('')
      console.log('üéâ ¬°Prueba exitosa!')
      console.log('‚úÖ La selecci√≥n de clientes funciona correctamente')
      console.log('‚úÖ Los datos se asignan correctamente')
      console.log('‚úÖ La validaci√≥n pasa')
      
    } else {
      console.log('')
      console.log('‚ö†Ô∏è La prueba fall√≥')
      console.log('üí° Revisa los datos de los clientes en la base de datos')
    }
    
  } catch (error) {
    console.error('‚ùå Error general:', error.message)
    process.exit(1)
  }
}

// Ejecutar
main()
